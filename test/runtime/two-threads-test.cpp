// RUN: %srcroot/test/runtime/run-scheduler-test.py %s -gxx "%gxx" -llvmgcc "%llvmgcc" -projbindir "%projbindir" -ternruntime "%ternruntime"  -ternbcruntime "%ternbcruntime"

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <pthread.h>
#include <assert.h>
#include <unistd.h>
#include <semaphore.h>

sem_t sem;
pthread_mutex_t mu = PTHREAD_MUTEX_INITIALIZER;

void* thread_func(void*) {
  sem_wait(&sem);

  pthread_mutex_lock(&mu);
  printf("SECOND\n");
  fflush(stdout);
  pthread_mutex_unlock(&mu);
}

int main(int argc, char *argv[], char* env[]) {
  int ret;
  pthread_t th;

  sem_init(&sem, 0, 0);

  ret  = pthread_create(&th, NULL, thread_func, NULL);
  assert(!ret && "pthread_create() failed!");

  pthread_mutex_lock(&mu);
  printf("FIRST\n");
  fflush(stdout);
  pthread_mutex_unlock(&mu);

  sem_post(&sem);

  pthread_join(th, NULL);
  return 0;
}
// CHECK indicates expected output checked by FileCheck; auto-generated by appending -gen to the RUN command above.
// CHECK:      FIRST
// CHECK-NEXT: SECOND
