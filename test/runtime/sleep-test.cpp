// RUN: %srcroot/test/runtime/run-scheduler-test.py %s -gxx "%gxx" -llvmgcc "%llvmgcc" -projbindir "%projbindir" -ternruntime "%ternruntime"  -ternbcruntime "%ternbcruntime"

#include <sys/time.h>
#include <time.h>
#include <assert.h>
#include <pthread.h>
#include <unistd.h>
#include <stdlib.h>
#include <stdio.h>

volatile int done = 0;
pthread_mutex_t mu = PTHREAD_MUTEX_INITIALIZER;

void* thread_func(void*) {
  for(int i=0; i<10; ++i) {
    pthread_mutex_lock(&mu);
    pthread_mutex_unlock(&mu);
    pthread_mutex_lock(&mu);
    pthread_mutex_unlock(&mu);
  }
  done = 1;
}

void test(int sleep_type) {
  pthread_t th;
  struct timespec t = {1, 1};

  done = 0;
  int ret = pthread_create(&th, NULL, thread_func, NULL);
  assert(!ret && "pthread_create() failed!");

  while(!done) {
    switch(sleep_type) {
    case 0: sleep(1); break;
    case 1: usleep(1); break;
    case 2: nanosleep(&t, NULL); break;
    default: abort();
    }
  }
  pthread_join(th, NULL);
}

int main(int argc, char *argv[], char *env[]) {
  test(0);
  printf("sleep() test done\n");
  test(1);
  printf("usleep() test done\n");
  test(2);
  printf("nanosleep() test done\n");
}



// OUT indicates expected output checked by FileCheck; auto-generated by appending -gen to the RUN command above.
// OUT:      sleep() test done
// OUT-NEXT: usleep() test done
// OUT-NEXT: nanosleep() test done
// RR indicates expected RR schedule checked by FileCheck; auto-generated by appending -gen to the RUN command above.
// RR:      pthread_create 1 0
// RR-NEXT: pthread_mutex_lock 4 1
// RR-NEXT: pthread_mutex_unlock 6 1
// RR-NEXT: pthread_mutex_lock 8 1
// RR-NEXT: pthread_mutex_unlock 10 1
// RR-NEXT: pthread_mutex_lock 12 1
// RR-NEXT: pthread_mutex_unlock 14 1
// RR-NEXT: pthread_mutex_lock 16 1
// RR-NEXT: pthread_mutex_unlock 18 1
// RR-NEXT: pthread_mutex_lock 20 1
// RR-NEXT: pthread_mutex_unlock 22 1
// RR-NEXT: pthread_mutex_lock 24 1
// RR-NEXT: pthread_mutex_unlock 26 1
// RR-NEXT: pthread_mutex_lock 28 1
// RR-NEXT: pthread_mutex_unlock 30 1
// RR-NEXT: pthread_mutex_lock 32 1
// RR-NEXT: pthread_mutex_unlock 34 1
// RR-NEXT: pthread_mutex_lock 36 1
// RR-NEXT: pthread_mutex_unlock 38 1
// RR-NEXT: pthread_mutex_lock 40 1
// RR-NEXT: pthread_mutex_unlock 42 1
// RR-NEXT: pthread_mutex_lock 44 1
// RR-NEXT: pthread_mutex_unlock 46 1
// RR-NEXT: pthread_mutex_lock 48 1
// RR-NEXT: pthread_mutex_unlock 50 1
// RR-NEXT: pthread_mutex_lock 52 1
// RR-NEXT: pthread_mutex_unlock 54 1
// RR-NEXT: pthread_mutex_lock 56 1
// RR-NEXT: pthread_mutex_unlock 58 1
// RR-NEXT: pthread_mutex_lock 60 1
// RR-NEXT: pthread_mutex_unlock 62 1
// RR-NEXT: pthread_mutex_lock 64 1
// RR-NEXT: pthread_mutex_unlock 66 1
// RR-NEXT: pthread_mutex_lock 68 1
// RR-NEXT: pthread_mutex_unlock 70 1
// RR-NEXT: pthread_mutex_lock 72 1
// RR-NEXT: pthread_mutex_unlock 74 1
// RR-NEXT: pthread_mutex_lock 76 1
// RR-NEXT: pthread_mutex_unlock 78 1
// RR-NEXT: pthread_mutex_lock 80 1
// RR-NEXT: pthread_mutex_unlock 82 1
// RR-NEXT: pthread_join 84 0
// RR-NEXT: pthread_create 85 0
// RR-NEXT: pthread_mutex_lock 88 2
// RR-NEXT: pthread_mutex_unlock 90 2
// RR-NEXT: pthread_mutex_lock 92 2
// RR-NEXT: pthread_mutex_unlock 94 2
// RR-NEXT: pthread_mutex_lock 96 2
// RR-NEXT: pthread_mutex_unlock 98 2
// RR-NEXT: pthread_mutex_lock 100 2
// RR-NEXT: pthread_mutex_unlock 102 2
// RR-NEXT: pthread_mutex_lock 104 2
// RR-NEXT: pthread_mutex_unlock 106 2
// RR-NEXT: pthread_mutex_lock 108 2
// RR-NEXT: pthread_mutex_unlock 110 2
// RR-NEXT: pthread_mutex_lock 112 2
// RR-NEXT: pthread_mutex_unlock 114 2
// RR-NEXT: pthread_mutex_lock 116 2
// RR-NEXT: pthread_mutex_unlock 118 2
// RR-NEXT: pthread_mutex_lock 120 2
// RR-NEXT: pthread_mutex_unlock 122 2
// RR-NEXT: pthread_mutex_lock 124 2
// RR-NEXT: pthread_mutex_unlock 126 2
// RR-NEXT: pthread_mutex_lock 128 2
// RR-NEXT: pthread_mutex_unlock 130 2
// RR-NEXT: pthread_mutex_lock 132 2
// RR-NEXT: pthread_mutex_unlock 134 2
// RR-NEXT: pthread_mutex_lock 136 2
// RR-NEXT: pthread_mutex_unlock 138 2
// RR-NEXT: pthread_mutex_lock 140 2
// RR-NEXT: pthread_mutex_unlock 142 2
// RR-NEXT: pthread_mutex_lock 144 2
// RR-NEXT: pthread_mutex_unlock 146 2
// RR-NEXT: pthread_mutex_lock 148 2
// RR-NEXT: pthread_mutex_unlock 150 2
// RR-NEXT: pthread_mutex_lock 152 2
// RR-NEXT: pthread_mutex_unlock 154 2
// RR-NEXT: pthread_mutex_lock 156 2
// RR-NEXT: pthread_mutex_unlock 158 2
// RR-NEXT: pthread_mutex_lock 160 2
// RR-NEXT: pthread_mutex_unlock 162 2
// RR-NEXT: pthread_mutex_lock 164 2
// RR-NEXT: pthread_mutex_unlock 166 2
// RR-NEXT: pthread_join 169 0
// RR-NEXT: pthread_create 170 0
// RR-NEXT: pthread_mutex_lock 173 3
// RR-NEXT: pthread_mutex_unlock 175 3
// RR-NEXT: pthread_mutex_lock 177 3
// RR-NEXT: pthread_mutex_unlock 179 3
// RR-NEXT: pthread_mutex_lock 181 3
// RR-NEXT: pthread_mutex_unlock 183 3
// RR-NEXT: pthread_mutex_lock 185 3
// RR-NEXT: pthread_mutex_unlock 187 3
// RR-NEXT: pthread_mutex_lock 189 3
// RR-NEXT: pthread_mutex_unlock 191 3
// RR-NEXT: pthread_mutex_lock 193 3
// RR-NEXT: pthread_mutex_unlock 195 3
// RR-NEXT: pthread_mutex_lock 197 3
// RR-NEXT: pthread_mutex_unlock 199 3
// RR-NEXT: pthread_mutex_lock 201 3
// RR-NEXT: pthread_mutex_unlock 203 3
// RR-NEXT: pthread_mutex_lock 205 3
// RR-NEXT: pthread_mutex_unlock 207 3
// RR-NEXT: pthread_mutex_lock 209 3
// RR-NEXT: pthread_mutex_unlock 211 3
// RR-NEXT: pthread_mutex_lock 213 3
// RR-NEXT: pthread_mutex_unlock 215 3
// RR-NEXT: pthread_mutex_lock 217 3
// RR-NEXT: pthread_mutex_unlock 219 3
// RR-NEXT: pthread_mutex_lock 221 3
// RR-NEXT: pthread_mutex_unlock 223 3
// RR-NEXT: pthread_mutex_lock 225 3
// RR-NEXT: pthread_mutex_unlock 227 3
// RR-NEXT: pthread_mutex_lock 229 3
// RR-NEXT: pthread_mutex_unlock 231 3
// RR-NEXT: pthread_mutex_lock 233 3
// RR-NEXT: pthread_mutex_unlock 235 3
// RR-NEXT: pthread_mutex_lock 237 3
// RR-NEXT: pthread_mutex_unlock 239 3
// RR-NEXT: pthread_mutex_lock 241 3
// RR-NEXT: pthread_mutex_unlock 243 3
// RR-NEXT: pthread_mutex_lock 245 3
// RR-NEXT: pthread_mutex_unlock 247 3
// RR-NEXT: pthread_mutex_lock 249 3
// RR-NEXT: pthread_mutex_unlock 251 3
// RR-NEXT: pthread_join 254 0
