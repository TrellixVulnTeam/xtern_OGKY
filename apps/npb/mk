#!/bin/bash

set -e

ROOT=`pwd`
ARCH=`uname -m`

if [ ! -d $XTERN_ROOT ]; then
	echo "XTERN_ROOT is not defined"
	exit 1
fi

if [ ! -d $APPS_DIR ]; then
    echo "APPS_DIR is not defiend"
    exit 1
fi

if [ ! -f $APPS_DIR/sys/NPB3.3.1.tar.gz ]; then
    echo "please update \$APPS_DIR"
    exit 1
fi

if [ ! -f $XTERN_ROOT/apps/openmp/install/bin/gfortran ]; then
    echo "please recompile \$XTERN_ROOT/apps/openmp/mk with fortran available"
    exit 1
fi

pushd $XTERN_ROOT/apps/npb/

# clean up
rm -rf NPB3.3.1
tar zxf $APPS_DIR/sys/NPB3.3.1.tar.gz

# link
ln -s $XTERN_ROOT/apps/npb/make.def NPB3.3.1/NPB3.3-OMP/config/
ln -s $XTERN_ROOT/apps/npb/suite.def NPB3.3.1/NPB3.3-OMP/config/
pushd NPB3.3.1/NPB3.3-OMP
if [ "$ARCH" == "x86_64" ]; then
  ln -s $XTERN_ROOT/apps/openmp/install/lib64/libgomp.a
  ln -s $XTERN_ROOT/apps/openmp/install/lib64/libstdc++.a
else
  ln -s $XTERN_ROOT/apps/openmp/install/lib/libgomp.a
  ln -s $XTERN_ROOT/apps/openmp/install/lib/libstdc++.a
fi
popd

# Add patches.
pushd NPB3.3.1
patch -p1 < ../patch/annot-UA-omp-non-det.patch
popd

pushd NPB3.3.1/NPB3.3-OMP
make suite
popd

rm -rf ft mg sp lu bt is ep cg ua dc
bench=( ft mg sp lu bt is ep cg ua dc )
for i in "${bench[@]}"
do
    ln -s NPB3.3.1/NPB3.3-OMP/bin/$i.?.x $i
done

popd
echo "DONE!"
