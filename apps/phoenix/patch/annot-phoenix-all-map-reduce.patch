diff -ruN phoenix-2.0.0-orig/include/map_reduce.h phoenix-2.0.0-wordcount/include/map_reduce.h
--- phoenix-2.0.0-orig/include/map_reduce.h	2013-02-24 15:27:51.822290729 -0500
+++ phoenix-2.0.0-wordcount/include/map_reduce.h	2013-02-25 01:39:18.589020511 -0500
@@ -200,4 +200,6 @@
  */
 int default_partition(int reduce_tasks, void* key, int key_size);
 
+void identity_reduce_wordcount (void *, iterator_t *itr);
+
 #endif // MAP_REDUCE_H_
diff -ruN phoenix-2.0.0-orig/src/map_reduce.c phoenix-2.0.0-wordcount/src/map_reduce.c
--- phoenix-2.0.0-orig/src/map_reduce.c	2013-02-24 15:27:51.826290728 -0500
+++ phoenix-2.0.0-wordcount/src/map_reduce.c	2013-02-25 01:38:41.637021814 -0500
@@ -54,6 +54,7 @@
 #include "locality.h"
 #include "struct.h"
 #include "tpool.h"
+#include "tern/user.h"
 
 #if !defined(_LINUX_) && !defined(_SOLARIS_)
 #error OS not supported
@@ -704,6 +705,7 @@
 
     /* Perform map task. */
     get_time (&begin);
+    //tern_lineup(0);
     env->map (&thread_func_arg);
     get_time (&end);
 
@@ -874,6 +876,7 @@
 
             if (env->reduce != identity_reduce) {
                 get_time (&begin);
+    //tern_lineup(1);
                 env->reduce (min_key_val->key, &args->itr);
                 get_time (&end);
 #ifdef TIMING
@@ -1635,7 +1638,6 @@
     for (i = 0; i < length; i++) {
         total_num_keys += vals[i].len;
     }
-
     env->merge_vals[curr_thread].len = total_num_keys;
     env->merge_vals[curr_thread].alloc_len = total_num_keys;
     env->merge_vals[curr_thread].pos = 0;
@@ -1770,6 +1772,20 @@
     void        *val;
     mr_env_t    *env;
 
+    env = get_env();
+    while (iter_next (itr, &val))
+    {
+        emit_inline (env, key, val);
+    }
+}
+
+void 
+identity_reduce_wordcount (void *key, iterator_t *itr)
+{
+    tern_lineup(2);
+    void        *val;
+    mr_env_t    *env;
+
     env = get_env();
     while (iter_next (itr, &val))
     {
diff -ruN phoenix-2.0.0-orig/src/tpool.c phoenix-2.0.0-wordcount/src/tpool.c
--- phoenix-2.0.0-orig/src/tpool.c	2013-02-24 15:27:51.826290728 -0500
+++ phoenix-2.0.0-wordcount/src/tpool.c	2013-02-25 01:38:56.901021256 -0500
@@ -32,6 +32,7 @@
 #include "memory.h"
 #include "tpool.h"
 #include "stddefines.h"
+#include "tern/user.h"
 
 typedef struct {
     sem_t           sem_run;
@@ -93,6 +94,9 @@
     CHECK_ERROR (pthread_attr_setdetachstate (&attr, PTHREAD_CREATE_DETACHED));
 
     tpool->die = 0;
+    tern_lineup_init(0, num_threads, num_threads*20);
+    tern_lineup_init(1, num_threads, num_threads*20);
+    tern_lineup_init(2, num_threads, num_threads*20);
     for (i = 0; i < num_threads; ++i) {
         /* Initialize thread argument. */
         CHECK_ERROR (sem_init (&(tpool->thread_args[i].sem_run), 0, 0));
diff -ruN phoenix-2.0.0-orig/tests/word_count/sort.c phoenix-2.0.0-wordcount/tests/word_count/sort.c
--- phoenix-2.0.0-orig/tests/word_count/sort.c	2013-02-24 15:27:51.826290728 -0500
+++ phoenix-2.0.0-wordcount/tests/word_count/sort.c	2013-02-25 01:39:46.869019536 -0500
@@ -108,7 +108,7 @@
     memset(&map_reduce_args, 0, sizeof(map_reduce_args_t));
     map_reduce_args.task_data = base; // Array to sort
     map_reduce_args.map = mr_sort_map;
-    map_reduce_args.reduce = NULL; // Identity Reduce
+    map_reduce_args.reduce = identity_reduce_wordcount; // Identity Reduce wordcount.
     map_reduce_args.splitter = NULL; // Array splitter //mr_sort_splitter;
     map_reduce_args.key_cmp = compar;
     map_reduce_args.unit_size = width;
diff -ruN phoenix-2.0.0-orig/tests/word_count/word_count.c phoenix-2.0.0-wordcount/tests/word_count/word_count.c
--- phoenix-2.0.0-orig/tests/word_count/word_count.c	2013-02-24 15:27:51.826290728 -0500
+++ phoenix-2.0.0-wordcount/tests/word_count/word_count.c	2013-02-25 01:39:33.861019999 -0500
@@ -41,6 +41,7 @@
 #include "map_reduce.h"
 #include "stddefines.h"
 #include "sort.h"
+#include "tern/user.h"
 
 #define DEFAULT_DISP_NUM 10
 
@@ -148,6 +149,7 @@
  */
 void wordcount_map(map_args_t *args) 
 {
+    tern_lineup(0);
     char *curr_start, curr_ltr;
     int state = NOT_IN_WORD;
     int i;
@@ -199,6 +201,7 @@
  */
 void wordcount_reduce(void *key_in, iterator_t *itr)
 {
+    tern_lineup(1);
     char *key = (char *)key_in;
     void *val;
     intptr_t sum = 0;
