--- gcc-4.5.4-orig/libstdc++-v3/include/parallel/partition.h	2011-02-25 09:04:40.000000000 -0500
+++ gcc-4.5.4/libstdc++-v3/include/parallel/partition.h	2013-03-06 17:31:29.597659713 -0500
@@ -38,6 +38,7 @@
 #include <parallel/random_number.h>
 #include <bits/stl_algo.h>
 #include <parallel/parallel.h>
+#include "tern/user.h"
 
 /** @brief Decide whether to declare certain variables volatile. */
 #define _GLIBCXX_VOLATILE volatile
@@ -77,6 +78,7 @@
 
       omp_lock_t __result_lock;
       omp_init_lock(&__result_lock);
+	tern_lineup_init(0, __num_threads, __num_threads*10000);
 
       //at least two chunks per thread
       if (__right - __left + 1 >= 2 * __num_threads * __chunk_size)
@@ -121,6 +123,8 @@
 	      __thread_left_border = __thread_left - 1;
 	      __thread_right = __n - 1;
 	      __thread_right_border = __thread_right + 1;
+		tern_lineup(0);
+		tern_non_det_start();
 
 	      bool __iam_finished = false;
 	      while (!__iam_finished)
@@ -177,6 +181,8 @@
 		      --__thread_right;
 		    }
 		}
+		tern_non_det_end();
+		tern_lineup(0);
 
 	      // Now swap the leftover chunks to the right places.
 	      if (__thread_left <= __thread_left_border)
@@ -313,7 +319,10 @@
 	delete[] __reserved_left;
 	delete[] __reserved_right;
 
+	tern_non_det_start();
 	omp_destroy_lock(&__result_lock);
+	tern_non_det_end();
+	tern_lineup_destroy(0);
 
 	// Element "between" __final_left and __final_right might not have
 	// been regarded yet
