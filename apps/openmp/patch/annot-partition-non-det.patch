--- gcc-4.5.4-orig/libstdc++-v3/include/parallel/partition.h	2012-12-26 01:03:55.995889274 -0500
+++ gcc-4.5.4/libstdc++-v3/include/parallel/partition.h	2013-03-16 16:48:42.606325029 -0400
@@ -38,6 +38,7 @@
 #include <parallel/random_number.h>
 #include <bits/stl_algo.h>
 #include <parallel/parallel.h>
+#include "tern/user.h"
 
 /** @brief Decide whether to declare certain variables volatile. */
 #define _GLIBCXX_VOLATILE volatile
@@ -76,7 +77,9 @@
       _DifferenceType __chunk_size = __s.partition_chunk_size;
 
       omp_lock_t __result_lock;
+      tern_non_det_start();
       omp_init_lock(&__result_lock);
+      tern_non_det_end();
 
       //at least two chunks per thread
       if (__right - __left + 1 >= 2 * __num_threads * __chunk_size)
@@ -87,6 +90,8 @@
 	    __num_threads = omp_get_num_threads();
 	    __reserved_left = new bool[__num_threads];
 	    __reserved_right = new bool[__num_threads];
+		tern_lineup_init(0, __num_threads, __num_threads*20);
+		tern_lineup_init(1, __num_threads, __num_threads*20);
 
 	    if (__s.partition_chunk_share > 0.0)
 	      __chunk_size = std::max<_DifferenceType>
@@ -121,6 +126,8 @@
 	      __thread_left_border = __thread_left - 1;
 	      __thread_right = __n - 1;
 	      __thread_right_border = __thread_right + 1;
+	tern_lineup(0);
+	tern_non_det_start();
 
 	      bool __iam_finished = false;
 	      while (!__iam_finished)
@@ -177,6 +184,9 @@
 		      --__thread_right;
 		    }
 		}
+		tern_non_det_barrier_end(0, __num_threads);
+		tern_lineup(1);
+
 
 	      // Now swap the leftover chunks to the right places.
 	      if (__thread_left <= __thread_left_border)
@@ -313,7 +323,9 @@
 	delete[] __reserved_left;
 	delete[] __reserved_right;
 
+    tern_non_det_start();
 	omp_destroy_lock(&__result_lock);
+    tern_non_det_end();
 
 	// Element "between" __final_left and __final_right might not have
 	// been regarded yet
