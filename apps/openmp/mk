#!/bin/bash

set -e

if [ "$APPS_DIR" = "" ]; then
	echo '$APPS_DIR not defined, do `export APPS_DIR=`'
	exit 1
fi

XTERN_ANNOT_LIB="-I$XTERN_ROOT/include -L$XTERN_ROOT/dync_hook -Wl,--rpath,$XTERN_ROOT/dync_hook -lxtern-annot"
VER=4.5.4
echo -e "\nWe are compiling gcc-$VER by ourselves. We hope you have installed the same version of gcc on your machine, because we are going to use some libraries of it.\n";
cd $XTERN_ROOT/apps/openmp
rm -rf gcc-$VER install *.a ex//*.a
tar zxf $APPS_DIR/sys/gcc-$VER.tar.gz

# compile gcc
cd gcc-$VER
#patch -p1 < ../disable-sync-builtins.patch
patch -p1 < ../add-xtern-annot.patch
mkdir obj
cd obj
CFLAGS+="$XTERN_ANNOT_LIB" ../configure \
--prefix=$XTERN_ROOT/apps/openmp/install --disable-linux-futex --enable-languages=c,c++ --disable-multilib
# If there is any problem with building 'crti.o', try to create a symbolic link as following
# ln -s /usr/lib/x86_64-linux-gnu /usr/lib64
make -j64
make -j64 install


# Build the random shuffle benchmark.
cd $XTERN_ROOT/apps/openmp
ln -s $XTERN_ROOT/apps/openmp/install/lib64/libgomp.a
ln -s $XTERN_ROOT/apps/openmp/install/lib64/libstdc++.a
g++ -g  rand-shuf.cpp -o rand-serial

# Heming: we must add "-lgomp" in order to make the compilation pass.
g++ -g -static-libgcc -static-libstdc++ -D_GLIBCXX_PARALLEL -L. -fopenmp rand-shuf.cpp -o rand-para -lgomp $XTERN_ANNOT_LIB

# Build the parallel for benchmark. Heming: we must add "-lgomp" in order to make the compilation pass.
g++ -g -static-libgcc -static-libstdc++ -D_GLIBCXX_PARALLEL -L. -fopenmp examples/ex-for.cpp -o ex-for -lgomp $XTERN_ANNOT_LIB

# Build some other examples.
cd ex
ln -s $XTERN_ROOT/apps/openmp/install/lib64/libgomp.a
ln -s $XTERN_ROOT/apps/openmp/install/lib64/libstdc++.a
make
cd ..

# TBD.
